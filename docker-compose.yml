version: '3.7'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
       - "2181:2182"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - zookeeper-datavolume:/opt/zookeeper-3.4.13/data
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on: 
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
      KAFKA_ADVERTISED_HOST_NAME:  ${DOCKER_HOST_IP}
      KAFKA_CREATE_TOPICS: "v2xhub_scheduling_plan_sub:1:1,v2xhub_bsm_in:1:1,v2xhub_mobility_operation_in:1:1,v2xhub_mobility_path_in:1:1,vehicle_status_intent_output:1:1,v2xhub_map_msg_in:1:1,modified_spat:1:1,desired_phase_plan:1:1, tsc_config_state:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: "/kafka/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - kafka-datavolume:/kafka/kafka-logs
##############################################################
# Kafka Owl for monitoring kafka traffic. UI can be accessed on 
# configurable port set in performance/kowl.yaml NOTE: IS NOT 
# NECESSARY FOR DEPLOYMENT BUT HELFUL FOR DEBUGGING! 
################################################################
  kowl:
    image: quay.io/cloudhut/kowl
    container_name: kowl
    restart: on-failure
    network_mode: host
    depends_on:
      - kafka
    environment:
      CONFIG_FILEPATH: /etc/kowl/kowl.yaml
    volumes:
      - ./performance/kowl.yaml:/etc/kowl/kowl.yaml
  db:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=IVP
      - MYSQL_USER=IVP
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
    network_mode: host
    secrets:
      - mysql_password
      - mysql_root_password
    volumes:
      - ./mysql/localhost.sql:/docker-entrypoint-initdb.d/localhost.sql
      - mysql-datavolume:/var/lib/mysql
  php:
    image: usdotfhwaops/php:isetta
    container_name: php
    network_mode: host
    depends_on:
      - v2xhub
    stdin_open: true
    tty: true

  v2xhub:
    image: usdotfhwaops/v2xhubamd:isetta
    container_name: v2xhub
    network_mode: host
    restart: always
    depends_on:
      - db
    environment:
      - MYSQL_PASSWORD=/run/secrets/mysql_password
    secrets:
      - mysql_password
    volumes:
      - ./logs:/var/log/tmx
      - ./MAP:/var/www/plugins/MAP
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro    
  scheduling_service:
    image: usdotfhwastolcandidate/scheduling_service:isetta
    command: sh -c "/wait && /home/carma-streets/scheduling_service/build/scheduling_service"
    build: 
      context: .
      dockerfile: scheduling_service/Dockerfile
    container_name: scheduling_service
    restart: always
    network_mode: host
    depends_on:  
      - kafka
      - intersection_model
      - message_services
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
      WAIT_HOSTS: localhost:8080
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    volumes: 
      - ./scheduling_service/manifest.json:/home/carma-streets/scheduling_service/manifest.json
      - ./scheduling_service/logs/:/home/carma-streets/scheduling_service/logs/
      - /etc/localtime:/etc/localtime:ro 
      - /etc/timezone:/etc/timezone:ro     

  message_services:
    image: usdotfhwastolcandidate/message_services:isetta
    build: 
      context: .
      dockerfile: message_services/Dockerfile
    container_name: message_services
    restart: always
    network_mode: host
    depends_on:  
      - kafka
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
    volumes: 
      - ./message_services/manifest.json:/home/carma-streets/message_services/manifest.json
      - ./MAP/:/home/carma-streets/message_services/MAP/
      - ./message_services/logs/:/home/carma-streets/message_services/logs/
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
  intersection_model:
    image: usdotfhwastolcandidate/intersection_model:isetta
    build: 
      context: .
      dockerfile: intersection_model/Dockerfile
    container_name: intersection_model
    restart: always
    network_mode: host
    depends_on:
      - kafka
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
    volumes: 
      - ./intersection_model/manifest.json:/home/carma-streets/intersection_model/manifest.json
      - ./MAP/:/home/carma-streets/intersection_model/MAP/
      - ./intersection_model/logs/:/home/carma-streets/intersection_model/logs/
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
  signal_opt_service:
    image: usdotfhwastolcandidate/signal_opt_service:isetta
    command: sh -c "/wait && /home/carma-streets/signal_opt_service/build/signal_opt_service"
    build: 
      context: .
      dockerfile: signal_opt_service/Dockerfile
    container_name: signal_opt_service
    restart: always
    network_mode: host
    depends_on:
      - kafka
      - intersection_model
      - message_services
      - scheduling_service 
      - tsc_service   
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
      WAIT_HOSTS: localhost:8080
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    volumes: 
      - ./signal_opt_service/manifest.json:/home/carma-streets/signal_opt_service/manifest.json
      - ./signal_opt_service/logs/:/home/carma-streets/signal_opt_service/logs/
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
  tsc_service:
    image: usdotfhwastolcandidate/tsc_service:isetta
    command: sh -c "/wait && /home/carma-streets/tsc_client_service/build/traffic_signal_controller_service"
    build: 
      context: .
      dockerfile: tsc_client_service/Dockerfile
    container_name: tsc_service
    restart: always
    network_mode: host
    depends_on:
      - kafka
      - intersection_model
    environment:
      DOCKER_HOST_IP:  ${DOCKER_HOST_IP}
      WAIT_HOSTS: localhost:8080
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    volumes: 
      - ./tsc_client_service/manifest.json:/home/carma-streets/tsc_client_service/manifest.json
      - ./tsc_client_service/logs/:/home/carma-streets/tsc_client_service/logs/
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
secrets:
    mysql_password:
        file: ./secrets/mysql_password.txt
    mysql_root_password:
        file: ./secrets/mysql_root_password.txt
volumes:
    mysql-datavolume:
    kafka-datavolume:
    zookeeper-datavolume:
