/**
 * Intersection Model API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntersection_info.h
 *
 * 
 */

#ifndef OAIIntersection_info_H
#define OAIIntersection_info_H

#include <QJsonObject>

#include "OAILanelet_info.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntersection_info : public OAIObject {
public:
    OAIIntersection_info();
    OAIIntersection_info(QString json);
    ~OAIIntersection_info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAILanelet_info> getEntryLanelets() const;
    void setEntryLanelets(const QList<OAILanelet_info> &entry_lanelets);
    bool is_entry_lanelets_Set() const;
    bool is_entry_lanelets_Valid() const;

    QList<OAILanelet_info> getLinkLanelets() const;
    void setLinkLanelets(const QList<OAILanelet_info> &link_lanelets);
    bool is_link_lanelets_Set() const;
    bool is_link_lanelets_Valid() const;

    QList<OAILanelet_info> getDepartureLanelets() const;
    void setDepartureLanelets(const QList<OAILanelet_info> &departure_lanelets);
    bool is_departure_lanelets_Set() const;
    bool is_departure_lanelets_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAILanelet_info> entry_lanelets;
    bool m_entry_lanelets_isSet;
    bool m_entry_lanelets_isValid;

    QList<OAILanelet_info> link_lanelets;
    bool m_link_lanelets_isSet;
    bool m_link_lanelets_isValid;

    QList<OAILanelet_info> departure_lanelets;
    bool m_departure_lanelets_isSet;
    bool m_departure_lanelets_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntersection_info)

#endif // OAIIntersection_info_H
